@model HitaRasDhara.Models.UserResponse5Aug
<div class="row">
    <div class="col-md-12">
        <form class="form-horizontal" id="NewEntryForm">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", id = "MobileField" })
                    @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DateOfBirth, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", placeholder = "Employee Date Of Birth", @readonly = "true" } })
                    @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" id="QuestionBlock">
                @Html.LabelFor(m => m.Question, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextAreaFor(m => m.Question, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Question, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" id="ShowOtpButton">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" id="SubmitOfNewForm" value="Register" class="btn btn-primary" />
                </div>
            </div>
        </form>
    </div>
</div>
<script>

    $(document).ready(function () {
        $('input[type=datetime]').datepicker({
            format: 'YY-MM-DD',
            changeMonth: true,
            changeYear: true,
            minDate: new Date('2017-3-26'),
            maxDate: new Date('2018-3-26')
        });

        $("input[type=datetime]").datepicker('setDate', "2017-3-26"); //Set to min Date

        function registerNow(formData) {
            $.ajax({
                type: "POST",
                url: "/Home/Index",
                data: formData,
                dataType: 'binary',
                success: function (result) {
                   if (result.type === "application/pdf") {
                        console.log('File downloaded');
                        saveAs(result, "Registration Pass.pdf");
                        showPopup(5);
                    } else {
                        if (result.size === 2) {
                            showPopup(1);
                            console.log('Duplicate');
                        } else
                            showPopup(3);
                        console.log("Technical Error");
                    }
                },
                error: function (data) {
                    console.log('error : data code is : ' + data.Code);
                }
            });
            return false;
        }

        $('#SubmitOfNewForm').click(function () {
            var $form = $('#NewEntryForm');
            if (!$form.valid()) {
                return false;
            } else {
                $.ajax({
                    type: "POST",
                    url: "/Home/SemiFilledForm",
                    data: $('#NewEntryForm').serialize(),
                    success: function (result) {
                       swal("Please enter the OTP sent to your mobile",
                                {
                                    content: "input"
                                })
                            .then((value) => {
                                if (result.OTPCode === `${value}`) {
                                    registerNow($('#NewEntryForm').serialize());
                                } else {
                                    swal("Failure!", "The OTP you entered is invalid", "error");
                                }
                            });
                    },
                    error: function (data) {
                        console.log('error : data code is : ' + data.Code);
                    }
                });
            }
            return false;
        });
    });
</script>
