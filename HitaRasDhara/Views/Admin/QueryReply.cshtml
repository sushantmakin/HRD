﻿@model HitaRasDhara.Models.EmailViewModel
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<div class="row">
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active"> Query - Reply </li>
    </ol>
</div><!--/.row-->

<div class="panel panel-container">
    <div class="panel panel-default">
        <div class="panel-heading">
            Reply to Query via email
        </div>
        <div class="panel-body">
            <form class="form-horizontal" id="EmailReplyForm">
                @Html.AntiForgeryToken()
                <fieldset>
                    <!-- To input-->
                    <div class="form-group">
                        <label name="EmailTo" class="col-md-1 control-label">To</label>
                        <div class="col-md-11">
                            @*<input id="email" name="email" type="text" value="@Model.EmailTo" class="form-control" readonly="readonly">*@
                            @Html.TextBoxFor(m => m.EmailTo, new { Value = @Model.EmailTo, @class = "form-control", @readonly= "readonly"})
                            @Html.ValidationMessageFor(m => m.EmailTo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <input id="Id" 
                           name="Id" 
                           type="hidden" 
                           value=@Model.Id />
                    <!-- Subject input-->
                    <div class="form-group">
                        <label name="EmailSubject" class="col-md-1 control-label">Subject</label>
                        <div class="col-md-11">
                            @*<input id="subject" name="subject" type="text" value="@Model.EmailSubject" class="form-control">*@
                            @Html.TextBoxFor(m => m.EmailSubject, new { Value = @Model.EmailSubject, @class = "form-control"})
                            @Html.ValidationMessageFor(m => m.EmailSubject, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Message body -->
                    <div class="form-group">
                        <label name="EmailBody" class="col-md-1 control-label">Reply</label>
                        <div class="col-md-11">
                            @Html.TextAreaFor(m => m.EmailBody, new { Value = @Model.EmailBody, @class = "form-control", rows = "10" })
                            @Html.ValidationMessageFor(m => m.EmailBody, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Form actions -->
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-9">
                            <input type="submit" id="SubmitBtnOfReplyForm" value="Send Reply" class="btn btn-lg btn-primary" />
                            <a class="btn btn-lg btn-primary" href='@Url.Action("Query","Admin")'> <i class="fa fa-reply" aria-hidden="true"></i> Back </a>
                        </div>
                    </div>
                </fieldset>
            </form>
        </div>
    </div>
</div>
<script>
    $('#SubmitBtnOfReplyForm').click(function () {
        swal({
            title: 'Are you sure ?',
            text: 'Do you wish to reply to the subscriber with the mentioned text ?',
            type: 'warning',
            allowOutsideClick: false,
            confirmButtonText: 'Yes, Send Reply',
            showCancelButton: true,
            cancelButtonColor: '#d33',
            cancelButtonText: 'No, I wish to recheck.'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    type: "POST",
                    url: "/Admin/QueryReply",
                    data: $('#EmailReplyForm').serialize(),
                    success: function (result) {
                        console.log('data is : ' + result.Code);
                        showPopup(result.Code);
                    },
                    error: function (data) {
                        console.log('error : data code is : ' + data.Code);
                    }
                });
            } else if (result.dismiss === "cancel" || result.dismiss === "esc") {
                //Nothing
            }
        });
        return false;
    });

</script>
