@model HitaRasDhara.Controllers.DbViewForQuery

@functions {
    private string getMonthString(int timeStampMonth)
    {
        switch (timeStampMonth)
        {
            case 1:
                return "January";
            case 2:
                return "Febuary";
            case 3:
                return "March";
            case 4:
                return "April";
            case 5:
                return "May";
            case 6:
                return "June";
            case 7:
                return "July";
            case 8:
                return "August";
            case 9:
                return "September";
            case 10:
                return "October";
            case 11:
                return "November";
            case 12:
                return "December";
            default:
                return timeStampMonth.ToString();
        }
    }
}

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<div class="row">
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active"> Query </li>
    </ol>
</div><!--/.row-->
@*<div class="header">
        <h1 class="page-header">The current status of Queries recieved.</h1>
    </div>*@

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Query", "Admin", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            <div id="wrap">
                <div class="container">
                    <div class="panel panel-container">
                        <div class="row">
                            <div class="col-xs-4 col-md-4 col-lg-4 no-padding">
                                <div class="panel panel-teal panel-widget border-right">
                                    <div class="row no-padding">
                                        <em class="fa fa-xl fa-question-circle color-blue"></em>
                                        <div class="large">@ViewBag.TotalQueries</div>
                                        <div class="text-muted">Total Queries</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-4 col-md-4 col-lg-4 no-padding">
                                <div class="panel panel-blue panel-widget border-right">
                                    <div class="row no-padding">
                                        <em class="fa fa-xl fa-question-circle color-red"></em>
                                        <div class="large">@ViewBag.PendingReplies</div>
                                        <div class="text-muted">Pending Replies</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-4 col-md-4 col-lg-4 no-padding">
                                <div class="panel panel-blue panel-widget">
                                    <div class="row no-padding">
                                        <em class="fa fa-xl fa-question-circle color-teal"></em>
                                        <div class="large">@ViewBag.RepliedQueries</div>
                                        <div class="text-muted">Replied Queries</div>
                                    </div>
                                </div>
                            </div>
                        </div><!--/.row-->
                    </div>

                    <div class="panel panel-default articles">
                        <div class="panel-heading">
                            The current status of Queries recieved.
                        </div>
                        @foreach (var item in Model.ContentItems)
                        {
                            <div class="panel-body articles-container">
                                <div class="article border-bottom">
                                    <div class="col-xs-12">
                                        <div class="row">
                                            <div class="col-xs-2 col-md-2 date">
                                                <div class="large">@item.TimeStamp.Day</div>
                                                <div class="text-muted">@getMonthString(item.TimeStamp.Month) , @item.TimeStamp.Year</div>
                                                @if (item.Status == "Replied")
                                                {
                                                    <img src="~/img/replied.jpg" id="StatusStamp" />
                                                }
                                                else
                                                {
                                                    <img src="~/img/pending.jpg" id="StatusStamp" />
                                                }
                                            </div>
                                            <div class="col-xs-10 col-md-10">
                                                <h4>
                                                    <a href="~/admin/QueryReply?QueryId=@item.ID">@item.Name</a>
                                                    <a class="btn btn-primary" href='@Url.Action("QueryReply","Admin", new { QueryId = @item.ID})' style="float: right;"> <i class="fa fa-reply" aria-hidden="true"></i> Reply </a>
                                                </h4>
                                                <h3> @Html.Raw(item.Query)</h3>
                                                <p><span class="fa fa-envelope color-blue"></span> @item.Email </p>
                                                <p><span class="fa fa-phone color-blue"></span> @item.PhoneCountryCode - @item.Phone </p>
                                                <p><span class="fa fa-map-marker color-blue"></span> @item.City, @item.State, @item.Country </p>
                                                @if (item.Status == "Replied")
                                                {
                                                   <h4 style="font-family: cursive;"> @Html.Raw(item.Response) </h4>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="clear"></div>
                                </div><!--End .article-->
                            </div>
                        }
                    </div><!--End .articles-->


                </div>
            </div>
        }
    </div>
</div>

<script>

    $('.glyphicon-sort').css({ 'cursor': 'pointer' });

    function myFunction() {
        var input, filter, found, table, tr, td, i, j;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td");
            for (j = 0; j < td.length; j++) {
                if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
                    found = true;
                }
            }
            if (found) {
                tr[i].style.display = "";
                found = false;
            } else if (!tr[i].id.match('^tableHeader')) {
                tr[i].style.display = "none";
            }
        }
    }

    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("myTable");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc";
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.getElementsByTagName("TR");
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1) ; i++) {
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /*check if the two rows should switch place,
                based on the direction, asc or desc:*/
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                //Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /*If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again.*/
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }

    //function replyToQuery(id) {
    //    window.location = 'QueryReply?QueryId=' + id;
    //}
</script>
